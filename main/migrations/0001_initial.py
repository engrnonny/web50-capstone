# Generated by Django 3.2.9 on 2021-11-30 14:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.IntegerField(blank=True)),
                ('gender', models.CharField(blank=True, max_length=8)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=32)),
                ('lga', models.CharField(blank=True, max_length=32)),
                ('state', models.CharField(blank=True, max_length=32)),
                ('country', models.CharField(blank=True, max_length=32)),
                ('occupation', models.CharField(blank=True, max_length=64)),
                ('linkedin', models.URLField(blank=True)),
                ('profile_pic', models.ImageField(blank=True, upload_to='user-profile-pics')),
                ('amount_contributed', models.FloatField(default=0.0)),
                ('amount_owed', models.FloatField(default=0.0)),
                ('monthly_payment', models.BooleanField(default=False)),
                ('monthly_vote', models.BooleanField(default=False)),
                ('rank', models.CharField(blank=True, max_length=32)),
                ('followers', models.ManyToManyField(blank=True, related_name='user_followers', to=settings.AUTH_USER_MODEL)),
                ('following', models.ManyToManyField(blank=True, related_name='user_following', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('brief_description', models.CharField(max_length=225)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=32)),
                ('state', models.CharField(max_length=32)),
                ('country', models.CharField(max_length=32)),
                ('duration', models.IntegerField(default=0)),
                ('detail_description', models.TextField()),
                ('cost', models.FloatField()),
                ('cost_breakdown', models.TextField()),
                ('expiration', models.IntegerField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Awaiting approval', 'Awaiting approval'), ('Completed', 'Completed'), ('Ongoing', 'Ongoing'), ('Rejected', 'Rejected'), ('Suspended', 'Suspended')], max_length=32, null=True)),
                ('investigated', models.BooleanField(default=False)),
                ('investigation_note', models.CharField(max_length=255)),
                ('approved', models.BooleanField(default=False)),
                ('approved_date', models.DateTimeField(blank=True)),
                ('completed', models.BooleanField(default=False)),
                ('closed', models.BooleanField(default=False)),
                ('closed_note', models.TextField(blank=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=128)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approver', to=settings.AUTH_USER_MODEL)),
                ('backers', models.ManyToManyField(blank=True, related_name='backers', to=settings.AUTH_USER_MODEL)),
                ('closer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closer', to=settings.AUTH_USER_MODEL)),
                ('coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinator', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('investigator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investigator', to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisor', to=settings.AUTH_USER_MODEL)),
                ('volunteers', models.ManyToManyField(related_name='volunteers', to=settings.AUTH_USER_MODEL)),
                ('voters', models.ManyToManyField(blank=True, related_name='voters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cause_categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Infrastructure', 'Infrastructure'), ('Health', 'Health')], max_length=64, null=True)),
                ('slug', models.SlugField(choices=[('infrastructure', 'infrastructure'), ('health', 'health')])),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic', models.ImageField(blank=True, upload_to='gallery')),
            ],
        ),
        migrations.CreateModel(
            name='Cause_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('upload', models.FileField(upload_to=main.models.cause_directory_path)),
                ('cause', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cause')),
            ],
        ),
    ]
